# Generated by Django 5.1.2 on 2024-11-20 08:09

import datetime
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField()),
                ('number', models.PositiveSmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Stage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=datetime.date.today)),
                ('score', models.PositiveSmallIntegerField(default=0)),
                ('friend', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('prediction', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='tournaments.match')),
                ('stage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournaments.stage')),
            ],
            options={
                'ordering': ['-date', 'friend'],
            },
        ),
        migrations.CreateModel(
            name='Rule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('participate', models.PositiveSmallIntegerField(default=0)),
                ('hit', models.PositiveSmallIntegerField(default=0)),
                ('bullseye', models.PositiveSmallIntegerField(default=0)),
                ('goals', models.PositiveSmallIntegerField(default=0)),
                ('assists', models.PositiveSmallIntegerField(default=0)),
                ('advance', models.PositiveSmallIntegerField(default=0)),
                ('advanced_position', models.PositiveSmallIntegerField(default=0)),
                ('stage', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='tournaments.stage')),
            ],
        ),
        migrations.AddField(
            model_name='match',
            name='stage',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='tournaments.stage'),
        ),
        migrations.AddField(
            model_name='stage',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournaments.tournament'),
        ),
        migrations.CreateModel(
            name='StagePrediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveSmallIntegerField()),
                ('friend', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('stage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournaments.stage')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournaments.team')),
            ],
            options={
                'ordering': ['friend', 'stage__tournament', 'stage', 'position'],
                'constraints': [models.UniqueConstraint(fields=('friend', 'stage', 'team'), name='stageprediction_friend_stage_team_uniq'), models.UniqueConstraint(fields=('friend', 'stage', 'position'), name='stageprediction_friend_stage_position_uniq')],
            },
        ),
        migrations.CreateModel(
            name='Prediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('home_score', models.PositiveSmallIntegerField()),
                ('away_score', models.PositiveSmallIntegerField()),
                ('result', models.CharField(choices=[('PA', 'Participate'), ('HI', 'Hit'), ('BU', 'Bullseye'), ('WR', 'Wrong')], default='PA', max_length=2)),
                ('goals', models.PositiveSmallIntegerField(default=0)),
                ('assists', models.PositiveSmallIntegerField(default=0)),
                ('friend', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournaments.match')),
                ('away_team', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='away_team', to='tournaments.team')),
                ('home_team', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='home_team', to='tournaments.team')),
            ],
            options={
                'ordering': ['-match__start_time'],
                'constraints': [models.UniqueConstraint(fields=('friend', 'match'), name='friend_match_uniq')],
            },
        ),
        migrations.AddConstraint(
            model_name='stage',
            constraint=models.UniqueConstraint(fields=('tournament', 'name'), name='tournament_stage_uniq'),
        ),
    ]
